<!DOCTYPE html>
<head>
    <style>
        header{
            background-color: rgb(226,190,150);
        }
        section{
            background-color: beige;
            text-align: left;
            margin-left: 1%;
        }
    </style>
</head>
<body>
    <header>
    <h1><center>Using File Version Info</center></h1>
    <section>
        Getting the version number of any managed /unmanaged DLL or executable in .NET 1.0,If i recall correctly,required some magic incantations with PInvoke.
    <br>
    I just discovered the File VersionInfo class from System.Diagnostics: 
    <br>
        <p>FileVersionInfo versionInfo; <br>
            versionInfo=File VersionInfo.GetversionInfo(@"e:\win2003\system32\svchost.exe");<br>
            MessageBox.Show(versionInfo.ToString());<br>
        </p>  
    <br>
    To use the class then,all you need to do is:
     <ol>
       <i><li>Invoke the static GetVersionInfo method</li>
        <li>Start using the properties of the resulting object.</li></i> 
    </ol>
    <br>
    File version is a 64 bit number.
    <ul>
        <li>The first 16 bits are the major number</li>
        <li>The next 16 bits are the minor number</li>
        <li>The third set of 16 bits are the build number</li>
        <li>The last 16 bits are the private build number</li>
    </ul>
    </section>
    <b> (c)2005 Copyright notice</b>
</header>
</body>
</html>